{"ast":null,"code":"import { Chart } from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../balanceStatistics/balance-statistics.service\";\nimport * as i2 from \"../comeStatistics/come.service\";\nexport class GraphComponent {\n  constructor(balanceService, comeService) {\n    this.balanceService = balanceService;\n    this.comeService = comeService;\n    this.balance = [];\n    this.come = [];\n  }\n  ngOnInit() {\n    this.balanceService.findAll().subscribe(data => {\n      this.balance = data;\n    });\n    this.comeService.findAll().subscribe(data => {\n      this.come = data;\n    });\n    let arrBalance = [1200.0, 1500.0, 2000.0, 700.0, 900.0, 1240.0, 1488.0];\n    let arrCome = [+1200, +300, +500, -1300, +300, +340, +248];\n    setTimeout(() => {\n      var myChart = new Chart('ctx', {\n        type: 'bar',\n        data: {\n          labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          datasets: [{\n            data: arrBalance,\n            borderWidth: 2,\n            borderColor: 'white',\n            backgroundColor: 'white'\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              suggestedMin: 20,\n              ticks: {\n                color: 'white'\n              },\n              grid: {\n                color: 'white'\n              }\n            },\n            y: {\n              ticks: {\n                color: 'white'\n              },\n              grid: {\n                color: 'white'\n              }\n            }\n          }\n        }\n      });\n      var myCharts = new Chart('cts', {\n        type: 'bar',\n        data: {\n          labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          datasets: [{\n            data: arrCome,\n            borderWidth: 2,\n            borderColor: 'white',\n            backgroundColor: 'white'\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              suggestedMin: 20,\n              ticks: {\n                color: 'white'\n              },\n              grid: {\n                color: 'white'\n              }\n            },\n            y: {\n              ticks: {\n                color: 'white'\n              },\n              grid: {\n                color: 'white'\n              }\n            }\n          }\n        }\n      });\n    });\n  }\n}\nGraphComponent.ɵfac = function GraphComponent_Factory(t) {\n  return new (t || GraphComponent)(i0.ɵɵdirectiveInject(i1.BalanceStatisticsService), i0.ɵɵdirectiveInject(i2.ComeService));\n};\nGraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GraphComponent,\n  selectors: [[\"app-graph\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"id\", \"divChart\", 2, \"margin-top\", \"7%\", \"min-height\", \"100px\", \"margin-bottom\", \"7%\", \"color\", \"white\"], [\"id\", \"ctx\", \"name\", \"ctx\", 2, \"height\", \"100%\", \"position\", \"relative\"], [\"id\", \"cts\", \"name\", \"cts\", 2, \"position\", \"relative\"]],\n  template: function GraphComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtext(1, \" Your balance in each day \");\n      i0.ɵɵelement(2, \"canvas\", 1);\n      i0.ɵɵtext(3, \" Your incomes-outcomes in each day \");\n      i0.ɵɵelement(4, \"canvas\", 2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#divChart[_ngcontent-%COMP%] {\\n    display: block;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIjZGl2Q2hhcnQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAgB,eAAe;;;;AAW7C,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,cAAwC,EAAUC,WAAwB;IAA1E,mBAAc,GAAdD,cAAc;IAAoC,gBAAW,GAAXC,WAAW;IAHjF,YAAO,GAAwB,EAAE;IACjC,SAAI,GAAW,EAAE;EAEiF;EAGlGC,QAAQ;IACN,IAAI,CAACF,cAAc,CAACG,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC7C,IAAI,CAACC,OAAO,GAAGD,IAAI;IACrB,CAAC,CAAC;IACF,IAAI,CAACJ,WAAW,CAACE,OAAO,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC1C,IAAI,CAACE,IAAI,GAAGF,IAAI;IAClB,CAAC,CAAC;IAEF,IAAIG,UAAU,GAAY,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;IAChF,IAAIC,OAAO,GAAY,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;IAEnEC,UAAU,CAAC,MAAK;MACd,IAAIC,OAAO,GAAG,IAAId,KAAK,CAAC,KAAK,EAAE;QAC7Be,IAAI,EAAE,KAAK;QACXP,IAAI,EAAE;UACJQ,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;UACtFC,QAAQ,EAAE,CAAC;YACTT,IAAI,EAAEG,UAAU;YAChBO,WAAW,EAAE,CAAC;YACdC,WAAW,EAAE,OAAO;YACpBC,eAAe,EAAE;WAClB;SACF;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,YAAY,EAAE,EAAE;cAChBC,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAO,CAAC;cACxBC,IAAI,EAAE;gBACJD,KAAK,EAAE;;aAEV;YACDE,CAAC,EAAE;cACDH,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAO,CAAC;cACxBC,IAAI,EAAE;gBACJD,KAAK,EAAE;;;;;OAMhB,CAAC;MACF,IAAIG,QAAQ,GAAG,IAAI7B,KAAK,CAAC,KAAK,EAAE;QAC9Be,IAAI,EAAE,KAAK;QACXP,IAAI,EAAE;UACJQ,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;UACtFC,QAAQ,EAAE,CAAC;YACTT,IAAI,EAAEI,OAAO;YACbM,WAAW,EAAE,CAAC;YACdC,WAAW,EAAE,OAAO;YACpBC,eAAe,EAAE;WAElB;SACF;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,YAAY,EAAE,EAAE;cAChBC,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAO,CAAC;cAExBC,IAAI,EAAE;gBACJD,KAAK,EAAE;;aAEV;YACDE,CAAC,EAAE;cACDH,KAAK,EAAE;gBAAEC,KAAK,EAAE;cAAO,CAAC;cACxBC,IAAI,EAAE;gBACJD,KAAK,EAAE;;;;;OAKhB,CAAC;IACJ,CAAC,CAAC;EACJ;;AAjFWzB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ3BC,8BAA6F;MACzFA,0CACA;MAAAA,4BAA+E;MAC/EA,mDACA;MAAAA,4BAAiE;MACrEA,iBAAM","names":["Chart","GraphComponent","constructor","balanceService","comeService","ngOnInit","findAll","subscribe","data","balance","come","arrBalance","arrCome","setTimeout","myChart","type","labels","datasets","borderWidth","borderColor","backgroundColor","options","scales","x","suggestedMin","ticks","color","grid","y","myCharts","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/media/tardies/Arthur memory/banking/client/src/app/graph/graph.component.ts","/media/tardies/Arthur memory/banking/client/src/app/graph/graph.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart, Colors } from 'chart.js/auto';\nimport { Come } from 'src/app/comeStatistics/come';\nimport { ComeService } from '../comeStatistics/come.service';\nimport { BalanceStatistics } from '../balanceStatistics/balance-statistics';\nimport { BalanceStatisticsService } from '../balanceStatistics/balance-statistics.service';\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css'],\n})\nexport class GraphComponent implements OnInit{\n  balance: BalanceStatistics[] = [];\n  come: Come[] = [];\n\n  constructor(private balanceService: BalanceStatisticsService, private comeService: ComeService) { }\n\n\n  ngOnInit() {\n    this.balanceService.findAll().subscribe(data => {\n      this.balance = data;\n    });\n    this.comeService.findAll().subscribe(data => {\n      this.come = data;\n    });\n\n    let arrBalance:number[] = [1200.0, 1500.0, 2000.0, 700.0, 900.0, 1240.0, 1488.0];\n    let arrCome:number[] = [+1200, +300, +500, -1300, +300, +340, +248];\n\n    setTimeout(() => {\n      var myChart = new Chart('ctx', {\n        type: 'bar',\n        data: {\n          labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          datasets: [{\n            data: arrBalance,\n            borderWidth: 2,\n            borderColor: 'white',\n            backgroundColor: 'white',\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              suggestedMin: 20,\n              ticks: { color: 'white'},\n              grid: {\n                color: 'white'\n              }\n            },\n            y: {\n              ticks: { color: 'white'},\n              grid: {\n                color: 'white'\n              }\n            },\n          }\n        }\n        \n      });\n      var myCharts = new Chart('cts', {\n        type: 'bar',\n        data: {\n          labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n          datasets: [{\n            data: arrCome,\n            borderWidth: 2,\n            borderColor: 'white',\n            backgroundColor: 'white',\n            \n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              suggestedMin: 20,\n              ticks: { color: 'white'},\n              \n              grid: {\n                color: 'white'\n              }\n            },\n            y: {\n              ticks: { color: 'white'},\n              grid: {\n                color: 'white'\n              }\n            }\n          },\n        }\n      });\n    });\n  }\n}\n","<div id=\"divChart\" style=\"margin-top:7%; min-height: 100px; margin-bottom: 7%; color: white\">\n    Your balance in each day\n    <canvas id=\"ctx\" name=\"ctx\" style=\"height: 100%; position: relative;\"></canvas>\n    Your incomes-outcomes in each day\n    <canvas id=\"cts\" name=\"cts\" style=\"position: relative;\"></canvas>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}